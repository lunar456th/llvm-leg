//===-- PIKASubtarget.h - Define Subtarget for the PIKA -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the PIKA specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef PIKASUBTARGET_H
#define PIKASUBTARGET_H

#include "PIKA.h"
#include "PIKAFrameLowering.h"
#include "PIKAISelLowering.h"
#include "PIKAInstrInfo.h"
#include "PIKASelectionDAGInfo.h"
#include "PIKASubtarget.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "PIKAGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class PIKASubtarget : public PIKAGenSubtargetInfo {
  virtual void anchor();

private:
  const DataLayout DL;       // Calculates type size & alignment.
  PIKAInstrInfo InstrInfo;
  PIKATargetLowering TLInfo;
  PIKASelectionDAGInfo TSInfo;
  PIKAFrameLowering FrameLowering;
  InstrItineraryData InstrItins;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  PIKASubtarget(const Triple &TT, StringRef CPU,
               StringRef FS, PIKATargetMachine &TM);

  /// getInstrItins - Return the instruction itineraries based on subtarget
  /// selection.
  const InstrItineraryData *getInstrItineraryData() const override {
    return &InstrItins;
  }
  const PIKAInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const PIKARegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const PIKATargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const PIKAFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const PIKASelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);
};
} // End llvm namespace

#endif

